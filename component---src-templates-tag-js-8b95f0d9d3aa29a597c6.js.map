{"version":3,"sources":["webpack:///./src/layout/index.tsx","webpack:///./node_modules/@material-ui/core/esm/Container/Container.js","webpack:///./src/components/PostsListing.module.scss","webpack:///./node_modules/@material-ui/core/esm/utils/capitalize.js","webpack:///./src/templates/tag.js","webpack:///./src/components/PostListing.js"],"names":["MainLayout","children","name","content","config","siteDescription","Container","props","ref","classes","className","_props$component","component","Component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","maxWidth","other","root","concat","String","theme","width","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","display","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","value","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","module","exports","capitalize","string","Error","charAt","toUpperCase","slice","data","pageContext","title","siteTitle","postEdges","edges","pageQuery","postList","postEdge","path","tags","categories","cover","date","excerpt","timeToRead","getPostList","styles","articleList","post","to","key","articleBox","right","meta"],"mappings":"8FAAA,8FAsBeA,IAbI,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACjB,oCACE,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,0BAAMC,KAAK,cAAcC,QAASC,IAAOC,mBAE3C,kBAAC,IAAD,KACCJ,GAED,kBAAC,IAAD,S,kCClBJ,wFAoEIK,EAAyB,cAAiB,SAAmBC,EAAOC,GACtE,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAmBJ,EAAMK,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDG,EAAwBP,EAAMQ,eAC9BA,OAA2C,IAA1BD,GAA2CA,EAC5DE,EAAeT,EAAMU,MACrBA,OAAyB,IAAjBD,GAAkCA,EAC1CE,EAAkBX,EAAMY,SACxBA,OAA+B,IAApBD,EAA6B,KAAOA,EAC/CE,EAAQ,YAAyBb,EAAO,CAAC,UAAW,YAAa,YAAa,iBAAkB,QAAS,aAE7G,OAAoB,gBAAoBM,EAAW,YAAS,CAC1DH,UAAW,YAAKD,EAAQY,KAAMX,EAAWO,GAASR,EAAQQ,MAAOF,GAAkBN,EAAQM,gBAA6B,IAAbI,GAAsBV,EAAQ,WAAWa,OAAO,YAAWC,OAAOJ,OAC7KX,IAAKA,GACJY,OAGU,iBAhFK,SAAgBI,GAClC,MAAO,CAELH,KAAM,YAAgB,CACpBI,MAAO,OACPC,WAAY,OACZC,UAAW,aACXC,YAAa,OACbC,YAAaL,EAAMM,QAAQ,GAC3BC,aAAcP,EAAMM,QAAQ,GAC5BE,QAAS,SACRR,EAAMS,YAAYC,GAAG,MAAO,CAC7BL,YAAaL,EAAMM,QAAQ,GAC3BC,aAAcP,EAAMM,QAAQ,KAI9Bf,eAAgB,CACdc,YAAa,EACbE,aAAc,GAIhBd,MAAOkB,OAAOC,KAAKZ,EAAMS,YAAYI,QAAQC,QAAO,SAAUC,EAAKC,GACjE,IAAIC,EAAQjB,EAAMS,YAAYI,OAAOG,GAQrC,OANc,IAAVC,IACFF,EAAIf,EAAMS,YAAYC,GAAGM,IAAe,CACtCrB,SAAUsB,IAIPF,IACN,IAGHG,WAAY,YAAgB,GAAIlB,EAAMS,YAAYC,GAAG,MAAO,CAC1Df,SAAUwB,KAAKC,IAAIpB,EAAMS,YAAYI,OAAOQ,GAAI,OAIlDC,WAAY,YAAgB,GAAItB,EAAMS,YAAYC,GAAG,MAAO,CAC1Df,SAAUK,EAAMS,YAAYI,OAAOU,KAIrCC,WAAY,YAAgB,GAAIxB,EAAMS,YAAYC,GAAG,MAAO,CAC1Df,SAAUK,EAAMS,YAAYI,OAAOY,KAIrCC,WAAY,YAAgB,GAAI1B,EAAMS,YAAYC,GAAG,MAAO,CAC1Df,SAAUK,EAAMS,YAAYI,OAAOc,KAIrCC,WAAY,YAAgB,GAAI5B,EAAMS,YAAYC,GAAG,MAAO,CAC1Df,SAAUK,EAAMS,YAAYI,OAAOgB,QAuBP,CAChCnD,KAAM,gBADO,CAEZI,I,qBCxFHgD,EAAOC,QAAU,CAAC,YAAc,2CAA2C,WAAa,0CAA0C,MAAQ,oCAAoC,KAAO,qC,kCCDrL,kDAKe,SAASC,EAAWC,GACjC,GAAsB,iBAAXA,EACT,MAAM,IAAIC,MAA6G,YAAuB,IAGhJ,OAAOD,EAAOE,OAAO,GAAGC,cAAgBH,EAAOI,MAAM,K,kCCVvD,mIAiBA,UAVoB,SAAC,GAAD,IAAGC,EAAH,OAASC,EAAT,qBAClB,2BACE,8BACE,uBACEC,MAAK,oBAAsBD,EAAtB,WAA4C3D,IAAO6D,YAE1D,uBAAaC,UAAWJ,oBAAuBK,WAO9C,IAAMC,EAAN,c,kCCpBP,0DA4CA,IAxCoB,SAAC,GAAmB,IAAjBF,EAAgB,EAAhBA,UAkBfG,EAjBc,WAClB,IAAMA,EAAN,GAaA,OAZAH,WAAkB,SAAAI,GAChBD,OAAc,CACZE,KAAMD,cADM,KAEZE,KAAMF,mBAFM,KAGZG,WAAYH,mBAHA,WAIZI,MAAOJ,mBAJK,MAKZN,MAAOM,mBALK,MAMZK,KAAML,cANM,KAOZM,QAASN,OAPG,QAQZO,WAAYP,OAAcO,gBAGvBR,EAGQS,GACjB,OACE,yBAAKpE,UAAWqE,IAAOC,aAErBX,OAAa,SAAAY,GAAI,OACf,0BAAMC,GAAID,EAAV,KAAqBE,IAAKF,EAAKjB,OAC7B,6BAAStD,UAAWqE,IAAOK,YACzB,yBAAK1E,UAAWqE,IAAOM,OACrB,4BAAKJ,EADP,OAEE,yBAAKvE,UAAWqE,IAAOO,MACpBL,EADH,WACsB,8BAAOA,kBAD7B,iBAEWA,EAFX,uBAFF,KAME,2BAAIA,EATK","file":"component---src-templates-tag-js-8b95f0d9d3aa29a597c6.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby-theme-material-ui';\nimport { Container, Box, Typography } from '@material-ui/core';\nimport Helmet from 'react-helmet'\nimport Footer from '../components/Footer'\nimport Header from '../components/Header'\nimport config from '../../data/SiteConfig'\n// import styles from './index.module.scss'\n\nconst MainLayout = ({ children }) => (\n  <>\n    <Header />\n    <Helmet>\n      <meta name=\"description\" content={config.siteDescription} />\n    </Helmet>\n    <Container>\n    {children}\n    </Container>\n    <Footer />\n  </>\n)\n\nexport default MainLayout\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"articleList\":\"PostsListing-module--article-list--3ReSK\",\"articleBox\":\"PostsListing-module--article-box--3M6_I\",\"right\":\"PostsListing-module--right--2MxCO\",\"meta\":\"PostsListing-module--meta--3cFzL\"};","import { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\"; // It should to be noted that this function isn't equivalent to `text-transform: capitalize`.\n//\n// A strict capitalization should uppercase the first letter of each word a the sentence.\n// We only handle the first word.\n\nexport default function capitalize(string) {\n  if (typeof string !== 'string') {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? \"Material-UI: capitalize(string) expects a string argument.\" : _formatMuiErrorMessage(7));\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Layout from '../layout'\nimport PostListing from '../components/PostListing'\nimport config from '../../data/SiteConfig'\n\nconst TagTemplate = ({ data, pageContext }) => (\n  <Layout>\n    <main>\n      <Helmet\n        title={`Posts tagged as \"${pageContext.tag}\" | ${config.siteTitle}`}\n      />\n      <PostListing postEdges={data.allMarkdownRemark.edges} />\n    </main>\n  </Layout>\n)\nexport default TagTemplate\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n            categories\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styles from './PostsListing.module.scss'\n\nconst PostListing = ({ postEdges }) => {\n  const getPostList = () => {\n    const postList = []\n    postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        categories: postEdge.node.frontmatter.categories,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead\n      })\n    })\n    return postList\n  }\n\n  const postList = getPostList()\n  return (\n    <div className={styles.articleList}>\n      {/* Your post list here. */\n      postList.map(post => (\n        <Link to={post.path} key={post.title}>\n          <article className={styles.articleBox}>\n            <div className={styles.right}>\n              <h3>{post.title}</h3>\n              <div className={styles.meta}>\n                {post.date} &mdash; <span>{post.categories.join(' / ')}</span>{' '}\n                &mdash; {post.timeToRead} Min Read{' '}\n              </div>\n              <p>{post.excerpt}</p>\n            </div>\n          </article>\n        </Link>\n      ))}\n    </div>\n  )\n}\n\nexport default PostListing\n"],"sourceRoot":""}